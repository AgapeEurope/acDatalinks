'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.239
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dataserver_devtest")>  _
Partial Public Class TnTDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFinancialAccount(instance As FinancialAccount)
    End Sub
  Partial Private Sub UpdateFinancialAccount(instance As FinancialAccount)
    End Sub
  Partial Private Sub DeleteFinancialAccount(instance As FinancialAccount)
    End Sub
  Partial Private Sub InsertGLAccount(instance As GLAccount)
    End Sub
  Partial Private Sub UpdateGLAccount(instance As GLAccount)
    End Sub
  Partial Private Sub DeleteGLAccount(instance As GLAccount)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AgapeConnectListener.My.MySettings.Default.dsConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property FinancialAccounts() As System.Data.Linq.Table(Of FinancialAccount)
		Get
			Return Me.GetTable(Of FinancialAccount)
		End Get
	End Property
	
	Public ReadOnly Property GLAccounts() As System.Data.Linq.Table(Of GLAccount)
		Get
			Return Me.GetTable(Of GLAccount)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FinancialAccount")>  _
Partial Public Class FinancialAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FinancialAccountID As Integer
	
	Private _Code As String
	
	Private _ScanCode As String
	
	Private _Description As String
	
	Private _BeginningBalance As Decimal
	
	Private _RowGuid As System.Guid
	
	Private _Category As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFinancialAccountIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFinancialAccountIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnScanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnScanCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnBeginningBalanceChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBeginningBalanceChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinancialAccountID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FinancialAccountID() As Integer
		Get
			Return Me._FinancialAccountID
		End Get
		Set
			If ((Me._FinancialAccountID = value)  _
						= false) Then
				Me.OnFinancialAccountIDChanging(value)
				Me.SendPropertyChanging
				Me._FinancialAccountID = value
				Me.SendPropertyChanged("FinancialAccountID")
				Me.OnFinancialAccountIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScanCode", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ScanCode() As String
		Get
			Return Me._ScanCode
		End Get
		Set
			If (String.Equals(Me._ScanCode, value) = false) Then
				Me.OnScanCodeChanging(value)
				Me.SendPropertyChanging
				Me._ScanCode = value
				Me.SendPropertyChanged("ScanCode")
				Me.OnScanCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BeginningBalance", DbType:="Money NOT NULL")>  _
	Public Property BeginningBalance() As Decimal
		Get
			Return Me._BeginningBalance
		End Get
		Set
			If ((Me._BeginningBalance = value)  _
						= false) Then
				Me.OnBeginningBalanceChanging(value)
				Me.SendPropertyChanging
				Me._BeginningBalance = value
				Me.SendPropertyChanged("BeginningBalance")
				Me.OnBeginningBalanceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property RowGuid() As System.Guid
		Get
			Return Me._RowGuid
		End Get
		Set
			If ((Me._RowGuid = value)  _
						= false) Then
				Me.OnRowGuidChanging(value)
				Me.SendPropertyChanging
				Me._RowGuid = value
				Me.SendPropertyChanged("RowGuid")
				Me.OnRowGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GLAccount")>  _
Partial Public Class GLAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GLAccountID As Integer
	
	Private _Code As String
	
	Private _ScanCode As String
	
	Private _Description As String
	
	Private _Category As String
	
	Private _IsIncome As Boolean
	
	Private _RowGuid As System.Guid
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGLAccountIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGLAccountIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnScanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnScanCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnIsIncomeChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsIncomeChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLAccountID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property GLAccountID() As Integer
		Get
			Return Me._GLAccountID
		End Get
		Set
			If ((Me._GLAccountID = value)  _
						= false) Then
				Me.OnGLAccountIDChanging(value)
				Me.SendPropertyChanging
				Me._GLAccountID = value
				Me.SendPropertyChanged("GLAccountID")
				Me.OnGLAccountIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(18) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScanCode", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ScanCode() As String
		Get
			Return Me._ScanCode
		End Get
		Set
			If (String.Equals(Me._ScanCode, value) = false) Then
				Me.OnScanCodeChanging(value)
				Me.SendPropertyChanging
				Me._ScanCode = value
				Me.SendPropertyChanged("ScanCode")
				Me.OnScanCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsIncome", DbType:="Bit NOT NULL")>  _
	Public Property IsIncome() As Boolean
		Get
			Return Me._IsIncome
		End Get
		Set
			If ((Me._IsIncome = value)  _
						= false) Then
				Me.OnIsIncomeChanging(value)
				Me.SendPropertyChanging
				Me._IsIncome = value
				Me.SendPropertyChanged("IsIncome")
				Me.OnIsIncomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property RowGuid() As System.Guid
		Get
			Return Me._RowGuid
		End Get
		Set
			If ((Me._RowGuid = value)  _
						= false) Then
				Me.OnRowGuidChanging(value)
				Me.SendPropertyChanging
				Me._RowGuid = value
				Me.SendPropertyChanged("RowGuid")
				Me.OnRowGuidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
