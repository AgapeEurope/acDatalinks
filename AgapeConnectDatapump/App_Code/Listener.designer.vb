'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.261
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="acDatalinks")>  _
Partial Public Class ListenerDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertWebUser(instance As Listener.WebUser)
    End Sub
    Partial Private Sub UpdateWebUser(instance As Listener.WebUser)
    End Sub
    Partial Private Sub DeleteWebUser(instance As Listener.WebUser)
    End Sub
    Partial Private Sub InsertWebUserCostCenter(instance As Listener.WebUserCostCenter)
    End Sub
    Partial Private Sub UpdateWebUserCostCenter(instance As Listener.WebUserCostCenter)
    End Sub
    Partial Private Sub DeleteWebUserCostCenter(instance As Listener.WebUserCostCenter)
    End Sub
    Partial Private Sub InsertDatalink(instance As Listener.Datalink)
    End Sub
    Partial Private Sub UpdateDatalink(instance As Listener.Datalink)
    End Sub
    Partial Private Sub DeleteDatalink(instance As Listener.Datalink)
    End Sub
    Partial Private Sub InsertSetting(instance As Listener.Setting)
    End Sub
    Partial Private Sub UpdateSetting(instance As Listener.Setting)
    End Sub
    Partial Private Sub DeleteSetting(instance As Listener.Setting)
    End Sub
    Partial Private Sub InsertWebUserDesignation(instance As Listener.WebUserDesignation)
    End Sub
    Partial Private Sub UpdateWebUserDesignation(instance As Listener.WebUserDesignation)
    End Sub
    Partial Private Sub DeleteWebUserDesignation(instance As Listener.WebUserDesignation)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.AgapeConnectDatapump.My.MySettings.Default.acConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property WebUsers() As System.Data.Linq.Table(Of Listener.WebUser)
		Get
			Return Me.GetTable(Of Listener.WebUser)
		End Get
	End Property
	
	Public ReadOnly Property WebUserCostCenters() As System.Data.Linq.Table(Of Listener.WebUserCostCenter)
		Get
			Return Me.GetTable(Of Listener.WebUserCostCenter)
		End Get
	End Property
	
	Public ReadOnly Property Datalinks() As System.Data.Linq.Table(Of Listener.Datalink)
		Get
			Return Me.GetTable(Of Listener.Datalink)
		End Get
	End Property
	
	Public ReadOnly Property Settings() As System.Data.Linq.Table(Of Listener.Setting)
		Get
			Return Me.GetTable(Of Listener.Setting)
		End Get
	End Property
	
	Public ReadOnly Property WebUserDesignations() As System.Data.Linq.Table(Of Listener.WebUserDesignation)
		Get
			Return Me.GetTable(Of Listener.WebUserDesignation)
		End Get
	End Property
End Class

Namespace Listener
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUsers")>  _
	Partial Public Class WebUser
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserID As Integer
		
		Private _UserName As String
		
		Private _Email As String
		
		Private _DefaultRegistrationCode As String
		
		Private _DatalinkId As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDefaultRegistrationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultRegistrationCodeChanged()
    End Sub
    Partial Private Sub OnDatalinkIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDatalinkIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property WebUserID() As Integer
			Get
				Return Me._WebUserID
			End Get
			Set
				If ((Me._WebUserID = value)  _
							= false) Then
					Me.OnWebUserIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserID = value
					Me.SendPropertyChanged("WebUserID")
					Me.OnWebUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property UserName() As String
			Get
				Return Me._UserName
			End Get
			Set
				If (String.Equals(Me._UserName, value) = false) Then
					Me.OnUserNameChanging(value)
					Me.SendPropertyChanging
					Me._UserName = value
					Me.SendPropertyChanged("UserName")
					Me.OnUserNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultRegistrationCode", DbType:="NVarChar(100)")>  _
		Public Property DefaultRegistrationCode() As String
			Get
				Return Me._DefaultRegistrationCode
			End Get
			Set
				If (String.Equals(Me._DefaultRegistrationCode, value) = false) Then
					Me.OnDefaultRegistrationCodeChanging(value)
					Me.SendPropertyChanging
					Me._DefaultRegistrationCode = value
					Me.SendPropertyChanged("DefaultRegistrationCode")
					Me.OnDefaultRegistrationCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatalinkId", DbType:="Int NOT NULL")>  _
		Public Property DatalinkId() As Integer
			Get
				Return Me._DatalinkId
			End Get
			Set
				If ((Me._DatalinkId = value)  _
							= false) Then
					Me.OnDatalinkIdChanging(value)
					Me.SendPropertyChanging
					Me._DatalinkId = value
					Me.SendPropertyChanged("DatalinkId")
					Me.OnDatalinkIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUserCostCenter")>  _
	Partial Public Class WebUserCostCenter
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserCostCenterID As Integer
		
		Private _UserName As String
		
		Private _ProfileCode As String
		
		Private _ProfileDescription As String
		
		Private _CostCenterCode As String
		
		Private _DatalinkId As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserCostCenterIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserCostCenterIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnProfileCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProfileCodeChanged()
    End Sub
    Partial Private Sub OnProfileDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnProfileDescriptionChanged()
    End Sub
    Partial Private Sub OnCostCenterCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterCodeChanged()
    End Sub
    Partial Private Sub OnDatalinkIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDatalinkIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserCostCenterID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property WebUserCostCenterID() As Integer
			Get
				Return Me._WebUserCostCenterID
			End Get
			Set
				If ((Me._WebUserCostCenterID = value)  _
							= false) Then
					Me.OnWebUserCostCenterIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserCostCenterID = value
					Me.SendPropertyChanged("WebUserCostCenterID")
					Me.OnWebUserCostCenterIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property UserName() As String
			Get
				Return Me._UserName
			End Get
			Set
				If (String.Equals(Me._UserName, value) = false) Then
					Me.OnUserNameChanging(value)
					Me.SendPropertyChanging
					Me._UserName = value
					Me.SendPropertyChanged("UserName")
					Me.OnUserNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileCode", DbType:="NVarChar(18) NOT NULL", CanBeNull:=false)>  _
		Public Property ProfileCode() As String
			Get
				Return Me._ProfileCode
			End Get
			Set
				If (String.Equals(Me._ProfileCode, value) = false) Then
					Me.OnProfileCodeChanging(value)
					Me.SendPropertyChanging
					Me._ProfileCode = value
					Me.SendPropertyChanged("ProfileCode")
					Me.OnProfileCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileDescription", DbType:="NVarChar(50)")>  _
		Public Property ProfileDescription() As String
			Get
				Return Me._ProfileDescription
			End Get
			Set
				If (String.Equals(Me._ProfileDescription, value) = false) Then
					Me.OnProfileDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._ProfileDescription = value
					Me.SendPropertyChanged("ProfileDescription")
					Me.OnProfileDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenterCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property CostCenterCode() As String
			Get
				Return Me._CostCenterCode
			End Get
			Set
				If (String.Equals(Me._CostCenterCode, value) = false) Then
					Me.OnCostCenterCodeChanging(value)
					Me.SendPropertyChanging
					Me._CostCenterCode = value
					Me.SendPropertyChanged("CostCenterCode")
					Me.OnCostCenterCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatalinkId", DbType:="Int NOT NULL")>  _
		Public Property DatalinkId() As Integer
			Get
				Return Me._DatalinkId
			End Get
			Set
				If ((Me._DatalinkId = value)  _
							= false) Then
					Me.OnDatalinkIdChanging(value)
					Me.SendPropertyChanging
					Me._DatalinkId = value
					Me.SendPropertyChanged("DatalinkId")
					Me.OnDatalinkIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Datalinks")>  _
	Partial Public Class Datalink
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DatalinkId As Integer
		
		Private _Name As String
		
		Private _dsConnectionString As String
		
		Private _solConnectionString As String
		
		Private _webURL As String
		
		Private _CompanyID As String
		
		Private _webPassword As String
		
		Private _AdvanceSuffix As String
		
		Private _AdvancePrefix As String
		
		Private _CurrencySymbol As String
		
		Private _Active As Boolean
		
		Private _LastSync As System.Nullable(Of Date)
		
		Private _Error As Boolean
		
		Private _ErrorMessage As String
		
		Private _CostCenterCount As Short
		
		Private _AccountCodeCount As Short
		
		Private _tntWebPortal As String
		
		Private _Spare1 As String
		
		Private _Spare2 As String
		
		Private _Spare3 As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDatalinkIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnDatalinkIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OndsConnectionStringChanging(value As String)
    End Sub
    Partial Private Sub OndsConnectionStringChanged()
    End Sub
    Partial Private Sub OnsolConnectionStringChanging(value As String)
    End Sub
    Partial Private Sub OnsolConnectionStringChanged()
    End Sub
    Partial Private Sub OnwebURLChanging(value As String)
    End Sub
    Partial Private Sub OnwebURLChanged()
    End Sub
    Partial Private Sub OnCompanyIDChanging(value As String)
    End Sub
    Partial Private Sub OnCompanyIDChanged()
    End Sub
    Partial Private Sub OnwebPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnwebPasswordChanged()
    End Sub
    Partial Private Sub OnAdvanceSuffixChanging(value As String)
    End Sub
    Partial Private Sub OnAdvanceSuffixChanged()
    End Sub
    Partial Private Sub OnAdvancePrefixChanging(value As String)
    End Sub
    Partial Private Sub OnAdvancePrefixChanged()
    End Sub
    Partial Private Sub OnCurrencySymbolChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencySymbolChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnLastSyncChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastSyncChanged()
    End Sub
    Partial Private Sub OnErrorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnErrorChanged()
    End Sub
    Partial Private Sub OnErrorMessageChanging(value As String)
    End Sub
    Partial Private Sub OnErrorMessageChanged()
    End Sub
    Partial Private Sub OnCostCenterCountChanging(value As Short)
    End Sub
    Partial Private Sub OnCostCenterCountChanged()
    End Sub
    Partial Private Sub OnAccountCodeCountChanging(value As Short)
    End Sub
    Partial Private Sub OnAccountCodeCountChanged()
    End Sub
    Partial Private Sub OntntWebPortalChanging(value As String)
    End Sub
    Partial Private Sub OntntWebPortalChanged()
    End Sub
    Partial Private Sub OnSpare1Changing(value As String)
    End Sub
    Partial Private Sub OnSpare1Changed()
    End Sub
    Partial Private Sub OnSpare2Changing(value As String)
    End Sub
    Partial Private Sub OnSpare2Changed()
    End Sub
    Partial Private Sub OnSpare3Changing(value As String)
    End Sub
    Partial Private Sub OnSpare3Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatalinkId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DatalinkId() As Integer
			Get
				Return Me._DatalinkId
			End Get
			Set
				If ((Me._DatalinkId = value)  _
							= false) Then
					Me.OnDatalinkIdChanging(value)
					Me.SendPropertyChanging
					Me._DatalinkId = value
					Me.SendPropertyChanged("DatalinkId")
					Me.OnDatalinkIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsConnectionString", DbType:="NVarChar(MAX)")>  _
		Public Property dsConnectionString() As String
			Get
				Return Me._dsConnectionString
			End Get
			Set
				If (String.Equals(Me._dsConnectionString, value) = false) Then
					Me.OndsConnectionStringChanging(value)
					Me.SendPropertyChanging
					Me._dsConnectionString = value
					Me.SendPropertyChanged("dsConnectionString")
					Me.OndsConnectionStringChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_solConnectionString", DbType:="NVarChar(MAX)")>  _
		Public Property solConnectionString() As String
			Get
				Return Me._solConnectionString
			End Get
			Set
				If (String.Equals(Me._solConnectionString, value) = false) Then
					Me.OnsolConnectionStringChanging(value)
					Me.SendPropertyChanging
					Me._solConnectionString = value
					Me.SendPropertyChanged("solConnectionString")
					Me.OnsolConnectionStringChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_webURL", DbType:="NVarChar(MAX)")>  _
		Public Property webURL() As String
			Get
				Return Me._webURL
			End Get
			Set
				If (String.Equals(Me._webURL, value) = false) Then
					Me.OnwebURLChanging(value)
					Me.SendPropertyChanging
					Me._webURL = value
					Me.SendPropertyChanged("webURL")
					Me.OnwebURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CompanyID", DbType:="NVarChar(100)")>  _
		Public Property CompanyID() As String
			Get
				Return Me._CompanyID
			End Get
			Set
				If (String.Equals(Me._CompanyID, value) = false) Then
					Me.OnCompanyIDChanging(value)
					Me.SendPropertyChanging
					Me._CompanyID = value
					Me.SendPropertyChanged("CompanyID")
					Me.OnCompanyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_webPassword", DbType:="NVarChar(MAX)")>  _
		Public Property webPassword() As String
			Get
				Return Me._webPassword
			End Get
			Set
				If (String.Equals(Me._webPassword, value) = false) Then
					Me.OnwebPasswordChanging(value)
					Me.SendPropertyChanging
					Me._webPassword = value
					Me.SendPropertyChanged("webPassword")
					Me.OnwebPasswordChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvanceSuffix", DbType:="NVarChar(50)")>  _
		Public Property AdvanceSuffix() As String
			Get
				Return Me._AdvanceSuffix
			End Get
			Set
				If (String.Equals(Me._AdvanceSuffix, value) = false) Then
					Me.OnAdvanceSuffixChanging(value)
					Me.SendPropertyChanging
					Me._AdvanceSuffix = value
					Me.SendPropertyChanged("AdvanceSuffix")
					Me.OnAdvanceSuffixChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvancePrefix", DbType:="NVarChar(50)")>  _
		Public Property AdvancePrefix() As String
			Get
				Return Me._AdvancePrefix
			End Get
			Set
				If (String.Equals(Me._AdvancePrefix, value) = false) Then
					Me.OnAdvancePrefixChanging(value)
					Me.SendPropertyChanging
					Me._AdvancePrefix = value
					Me.SendPropertyChanged("AdvancePrefix")
					Me.OnAdvancePrefixChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrencySymbol", DbType:="NVarChar(30)")>  _
		Public Property CurrencySymbol() As String
			Get
				Return Me._CurrencySymbol
			End Get
			Set
				If (String.Equals(Me._CurrencySymbol, value) = false) Then
					Me.OnCurrencySymbolChanging(value)
					Me.SendPropertyChanging
					Me._CurrencySymbol = value
					Me.SendPropertyChanged("CurrencySymbol")
					Me.OnCurrencySymbolChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
		Public Property Active() As Boolean
			Get
				Return Me._Active
			End Get
			Set
				If ((Me._Active = value)  _
							= false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastSync", DbType:="DateTime")>  _
		Public Property LastSync() As System.Nullable(Of Date)
			Get
				Return Me._LastSync
			End Get
			Set
				If (Me._LastSync.Equals(value) = false) Then
					Me.OnLastSyncChanging(value)
					Me.SendPropertyChanging
					Me._LastSync = value
					Me.SendPropertyChanged("LastSync")
					Me.OnLastSyncChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Error", Storage:="_Error", DbType:="Bit NOT NULL")>  _
		Public Property [Error]() As Boolean
			Get
				Return Me._Error
			End Get
			Set
				If ((Me._Error = value)  _
							= false) Then
					Me.OnErrorChanging(value)
					Me.SendPropertyChanging
					Me._Error = value
					Me.SendPropertyChanged("[Error]")
					Me.OnErrorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="NVarChar(MAX)")>  _
		Public Property ErrorMessage() As String
			Get
				Return Me._ErrorMessage
			End Get
			Set
				If (String.Equals(Me._ErrorMessage, value) = false) Then
					Me.OnErrorMessageChanging(value)
					Me.SendPropertyChanging
					Me._ErrorMessage = value
					Me.SendPropertyChanged("ErrorMessage")
					Me.OnErrorMessageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenterCount", DbType:="SmallInt NOT NULL")>  _
		Public Property CostCenterCount() As Short
			Get
				Return Me._CostCenterCount
			End Get
			Set
				If ((Me._CostCenterCount = value)  _
							= false) Then
					Me.OnCostCenterCountChanging(value)
					Me.SendPropertyChanging
					Me._CostCenterCount = value
					Me.SendPropertyChanged("CostCenterCount")
					Me.OnCostCenterCountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCodeCount", DbType:="SmallInt NOT NULL")>  _
		Public Property AccountCodeCount() As Short
			Get
				Return Me._AccountCodeCount
			End Get
			Set
				If ((Me._AccountCodeCount = value)  _
							= false) Then
					Me.OnAccountCodeCountChanging(value)
					Me.SendPropertyChanging
					Me._AccountCodeCount = value
					Me.SendPropertyChanged("AccountCodeCount")
					Me.OnAccountCodeCountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tntWebPortal", DbType:="NVarChar(MAX)")>  _
		Public Property tntWebPortal() As String
			Get
				Return Me._tntWebPortal
			End Get
			Set
				If (String.Equals(Me._tntWebPortal, value) = false) Then
					Me.OntntWebPortalChanging(value)
					Me.SendPropertyChanging
					Me._tntWebPortal = value
					Me.SendPropertyChanged("tntWebPortal")
					Me.OntntWebPortalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare1", DbType:="NVarChar(MAX)")>  _
		Public Property Spare1() As String
			Get
				Return Me._Spare1
			End Get
			Set
				If (String.Equals(Me._Spare1, value) = false) Then
					Me.OnSpare1Changing(value)
					Me.SendPropertyChanging
					Me._Spare1 = value
					Me.SendPropertyChanged("Spare1")
					Me.OnSpare1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare2", DbType:="NVarChar(MAX)")>  _
		Public Property Spare2() As String
			Get
				Return Me._Spare2
			End Get
			Set
				If (String.Equals(Me._Spare2, value) = false) Then
					Me.OnSpare2Changing(value)
					Me.SendPropertyChanging
					Me._Spare2 = value
					Me.SendPropertyChanged("Spare2")
					Me.OnSpare2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare3", DbType:="NVarChar(MAX)")>  _
		Public Property Spare3() As String
			Get
				Return Me._Spare3
			End Get
			Set
				If (String.Equals(Me._Spare3, value) = false) Then
					Me.OnSpare3Changing(value)
					Me.SendPropertyChanging
					Me._Spare3 = value
					Me.SendPropertyChanged("Spare3")
					Me.OnSpare3Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Settings")>  _
	Partial Public Class Setting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _GlobalSettingsId As Integer
		
		Private _osVersion As String
		
		Private _tntPath As String
		
		Private _tntVersion As String
		
		Private _sqlVersion As String
		
		Private _PollDelayInSeconds As System.Nullable(Of Long)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGlobalSettingsIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnGlobalSettingsIdChanged()
    End Sub
    Partial Private Sub OnosVersionChanging(value As String)
    End Sub
    Partial Private Sub OnosVersionChanged()
    End Sub
    Partial Private Sub OntntPathChanging(value As String)
    End Sub
    Partial Private Sub OntntPathChanged()
    End Sub
    Partial Private Sub OntntVersionChanging(value As String)
    End Sub
    Partial Private Sub OntntVersionChanged()
    End Sub
    Partial Private Sub OnsqlVersionChanging(value As String)
    End Sub
    Partial Private Sub OnsqlVersionChanged()
    End Sub
    Partial Private Sub OnPollDelayInSecondsChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnPollDelayInSecondsChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GlobalSettingsId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property GlobalSettingsId() As Integer
			Get
				Return Me._GlobalSettingsId
			End Get
			Set
				If ((Me._GlobalSettingsId = value)  _
							= false) Then
					Me.OnGlobalSettingsIdChanging(value)
					Me.SendPropertyChanging
					Me._GlobalSettingsId = value
					Me.SendPropertyChanged("GlobalSettingsId")
					Me.OnGlobalSettingsIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_osVersion", DbType:="NVarChar(100)")>  _
		Public Property osVersion() As String
			Get
				Return Me._osVersion
			End Get
			Set
				If (String.Equals(Me._osVersion, value) = false) Then
					Me.OnosVersionChanging(value)
					Me.SendPropertyChanging
					Me._osVersion = value
					Me.SendPropertyChanged("osVersion")
					Me.OnosVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tntPath", DbType:="NVarChar(250)")>  _
		Public Property tntPath() As String
			Get
				Return Me._tntPath
			End Get
			Set
				If (String.Equals(Me._tntPath, value) = false) Then
					Me.OntntPathChanging(value)
					Me.SendPropertyChanging
					Me._tntPath = value
					Me.SendPropertyChanged("tntPath")
					Me.OntntPathChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tntVersion", DbType:="NVarChar(50)")>  _
		Public Property tntVersion() As String
			Get
				Return Me._tntVersion
			End Get
			Set
				If (String.Equals(Me._tntVersion, value) = false) Then
					Me.OntntVersionChanging(value)
					Me.SendPropertyChanging
					Me._tntVersion = value
					Me.SendPropertyChanged("tntVersion")
					Me.OntntVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sqlVersion", DbType:="NVarChar(100)")>  _
		Public Property sqlVersion() As String
			Get
				Return Me._sqlVersion
			End Get
			Set
				If (String.Equals(Me._sqlVersion, value) = false) Then
					Me.OnsqlVersionChanging(value)
					Me.SendPropertyChanging
					Me._sqlVersion = value
					Me.SendPropertyChanged("sqlVersion")
					Me.OnsqlVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PollDelayInSeconds", DbType:="BigInt")>  _
		Public Property PollDelayInSeconds() As System.Nullable(Of Long)
			Get
				Return Me._PollDelayInSeconds
			End Get
			Set
				If (Me._PollDelayInSeconds.Equals(value) = false) Then
					Me.OnPollDelayInSecondsChanging(value)
					Me.SendPropertyChanging
					Me._PollDelayInSeconds = value
					Me.SendPropertyChanged("PollDelayInSeconds")
					Me.OnPollDelayInSecondsChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUserDesignations")>  _
	Partial Public Class WebUserDesignation
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserDesignationId As Long
		
		Private _DesignationCode As String
		
		Private _ProfileCode As String
		
		Private _ProfileDescription As String
		
		Private _Username As String
		
		Private _DatalinkId As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserDesignationIdChanging(value As Long)
    End Sub
    Partial Private Sub OnWebUserDesignationIdChanged()
    End Sub
    Partial Private Sub OnDesignationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDesignationCodeChanged()
    End Sub
    Partial Private Sub OnProfileCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProfileCodeChanged()
    End Sub
    Partial Private Sub OnProfileDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnProfileDescriptionChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnDatalinkIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDatalinkIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserDesignationId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property WebUserDesignationId() As Long
			Get
				Return Me._WebUserDesignationId
			End Get
			Set
				If ((Me._WebUserDesignationId = value)  _
							= false) Then
					Me.OnWebUserDesignationIdChanging(value)
					Me.SendPropertyChanging
					Me._WebUserDesignationId = value
					Me.SendPropertyChanged("WebUserDesignationId")
					Me.OnWebUserDesignationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesignationCode", DbType:="NVarChar(18)")>  _
		Public Property DesignationCode() As String
			Get
				Return Me._DesignationCode
			End Get
			Set
				If (String.Equals(Me._DesignationCode, value) = false) Then
					Me.OnDesignationCodeChanging(value)
					Me.SendPropertyChanging
					Me._DesignationCode = value
					Me.SendPropertyChanged("DesignationCode")
					Me.OnDesignationCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileCode", DbType:="NVarChar(18)")>  _
		Public Property ProfileCode() As String
			Get
				Return Me._ProfileCode
			End Get
			Set
				If (String.Equals(Me._ProfileCode, value) = false) Then
					Me.OnProfileCodeChanging(value)
					Me.SendPropertyChanging
					Me._ProfileCode = value
					Me.SendPropertyChanged("ProfileCode")
					Me.OnProfileCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileDescription", DbType:="NVarChar(50)")>  _
		Public Property ProfileDescription() As String
			Get
				Return Me._ProfileDescription
			End Get
			Set
				If (String.Equals(Me._ProfileDescription, value) = false) Then
					Me.OnProfileDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._ProfileDescription = value
					Me.SendPropertyChanged("ProfileDescription")
					Me.OnProfileDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(50)")>  _
		Public Property Username() As String
			Get
				Return Me._Username
			End Get
			Set
				If (String.Equals(Me._Username, value) = false) Then
					Me.OnUsernameChanging(value)
					Me.SendPropertyChanging
					Me._Username = value
					Me.SendPropertyChanged("Username")
					Me.OnUsernameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatalinkId", DbType:="Int")>  _
		Public Property DatalinkId() As System.Nullable(Of Integer)
			Get
				Return Me._DatalinkId
			End Get
			Set
				If (Me._DatalinkId.Equals(value) = false) Then
					Me.OnDatalinkIdChanging(value)
					Me.SendPropertyChanging
					Me._DatalinkId = value
					Me.SendPropertyChanged("DatalinkId")
					Me.OnDatalinkIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
