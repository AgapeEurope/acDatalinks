'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.261
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dataserver_devtest")>  _
Partial Public Class TNTDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
    Partial Private Sub InsertDataPumpScannerSource(instance As TNT.DataPumpScannerSource)
    End Sub
    Partial Private Sub UpdateDataPumpScannerSource(instance As TNT.DataPumpScannerSource)
    End Sub
    Partial Private Sub DeleteDataPumpScannerSource(instance As TNT.DataPumpScannerSource)
    End Sub
    Partial Private Sub InsertWebUser(instance As TNT.WebUser)
    End Sub
    Partial Private Sub UpdateWebUser(instance As TNT.WebUser)
    End Sub
    Partial Private Sub DeleteWebUser(instance As TNT.WebUser)
    End Sub
    Partial Private Sub InsertWebUserProfile(instance As TNT.WebUserProfile)
    End Sub
    Partial Private Sub UpdateWebUserProfile(instance As TNT.WebUserProfile)
    End Sub
    Partial Private Sub DeleteWebUserProfile(instance As TNT.WebUserProfile)
    End Sub
    Partial Private Sub InsertWebUserProfileFinancialAccount(instance As TNT.WebUserProfileFinancialAccount)
    End Sub
    Partial Private Sub UpdateWebUserProfileFinancialAccount(instance As TNT.WebUserProfileFinancialAccount)
    End Sub
    Partial Private Sub DeleteWebUserProfileFinancialAccount(instance As TNT.WebUserProfileFinancialAccount)
    End Sub
    Partial Private Sub InsertProperty(instance As TNT.Property)
    End Sub
    Partial Private Sub UpdateProperty(instance As TNT.Property)
    End Sub
    Partial Private Sub DeleteProperty(instance As TNT.Property)
    End Sub
    Partial Private Sub InsertDesig(instance As TNT.Desig)
    End Sub
    Partial Private Sub UpdateDesig(instance As TNT.Desig)
    End Sub
    Partial Private Sub DeleteDesig(instance As TNT.Desig)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SolomonInterface.My.MySettings.Default.dataserver_devtestConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property DataPumpScannerSources() As System.Data.Linq.Table(Of TNT.DataPumpScannerSource)
		Get
			Return Me.GetTable(Of TNT.DataPumpScannerSource)
		End Get
	End Property
	
	Public ReadOnly Property WebUsers() As System.Data.Linq.Table(Of TNT.WebUser)
		Get
			Return Me.GetTable(Of TNT.WebUser)
		End Get
	End Property
	
	Public ReadOnly Property WebUserProfiles() As System.Data.Linq.Table(Of TNT.WebUserProfile)
		Get
			Return Me.GetTable(Of TNT.WebUserProfile)
		End Get
	End Property
	
	Public ReadOnly Property WebUserProfileFinancialAccounts() As System.Data.Linq.Table(Of TNT.WebUserProfileFinancialAccount)
		Get
			Return Me.GetTable(Of TNT.WebUserProfileFinancialAccount)
		End Get
	End Property
	
	Public ReadOnly Property Properties() As System.Data.Linq.Table(Of TNT.[Property])
		Get
			Return Me.GetTable(Of TNT.[Property])
		End Get
	End Property
	
	Public ReadOnly Property Desigs() As System.Data.Linq.Table(Of TNT.Desig)
		Get
			Return Me.GetTable(Of TNT.Desig)
		End Get
	End Property
End Class

Namespace TNT
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DataPumpScannerSource")>  _
	Partial Public Class DataPumpScannerSource
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DataPumpScannerSourceID As Integer
		
		Private _Name As String
		
		Private _ClassCode As String
		
		Private _PropertiesXML As String
		
		Private _TemplateXML As String
		
		Private _LockUser As String
		
		Private _LockTime As Date
		
		Private _LockPurpose As String
		
		Private _RowGuid As System.Guid
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDataPumpScannerSourceIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDataPumpScannerSourceIDChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnClassCodeChanging(value As String)
    End Sub
    Partial Private Sub OnClassCodeChanged()
    End Sub
    Partial Private Sub OnPropertiesXMLChanging(value As String)
    End Sub
    Partial Private Sub OnPropertiesXMLChanged()
    End Sub
    Partial Private Sub OnTemplateXMLChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateXMLChanged()
    End Sub
    Partial Private Sub OnLockUserChanging(value As String)
    End Sub
    Partial Private Sub OnLockUserChanged()
    End Sub
    Partial Private Sub OnLockTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnLockTimeChanged()
    End Sub
    Partial Private Sub OnLockPurposeChanging(value As String)
    End Sub
    Partial Private Sub OnLockPurposeChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataPumpScannerSourceID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property DataPumpScannerSourceID() As Integer
			Get
				Return Me._DataPumpScannerSourceID
			End Get
			Set
				If ((Me._DataPumpScannerSourceID = value)  _
							= false) Then
					Me.OnDataPumpScannerSourceIDChanging(value)
					Me.SendPropertyChanging
					Me._DataPumpScannerSourceID = value
					Me.SendPropertyChanged("DataPumpScannerSourceID")
					Me.OnDataPumpScannerSourceIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClassCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property ClassCode() As String
			Get
				Return Me._ClassCode
			End Get
			Set
				If (String.Equals(Me._ClassCode, value) = false) Then
					Me.OnClassCodeChanging(value)
					Me.SendPropertyChanging
					Me._ClassCode = value
					Me.SendPropertyChanged("ClassCode")
					Me.OnClassCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertiesXML", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property PropertiesXML() As String
			Get
				Return Me._PropertiesXML
			End Get
			Set
				If (String.Equals(Me._PropertiesXML, value) = false) Then
					Me.OnPropertiesXMLChanging(value)
					Me.SendPropertyChanging
					Me._PropertiesXML = value
					Me.SendPropertyChanged("PropertiesXML")
					Me.OnPropertiesXMLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateXML", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property TemplateXML() As String
			Get
				Return Me._TemplateXML
			End Get
			Set
				If (String.Equals(Me._TemplateXML, value) = false) Then
					Me.OnTemplateXMLChanging(value)
					Me.SendPropertyChanging
					Me._TemplateXML = value
					Me.SendPropertyChanged("TemplateXML")
					Me.OnTemplateXMLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LockUser", DbType:="NVarChar(1238) NOT NULL", CanBeNull:=false)>  _
		Public Property LockUser() As String
			Get
				Return Me._LockUser
			End Get
			Set
				If (String.Equals(Me._LockUser, value) = false) Then
					Me.OnLockUserChanging(value)
					Me.SendPropertyChanging
					Me._LockUser = value
					Me.SendPropertyChanged("LockUser")
					Me.OnLockUserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LockTime", DbType:="DateTime NOT NULL")>  _
		Public Property LockTime() As Date
			Get
				Return Me._LockTime
			End Get
			Set
				If ((Me._LockTime = value)  _
							= false) Then
					Me.OnLockTimeChanging(value)
					Me.SendPropertyChanging
					Me._LockTime = value
					Me.SendPropertyChanged("LockTime")
					Me.OnLockTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LockPurpose", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property LockPurpose() As String
			Get
				Return Me._LockPurpose
			End Get
			Set
				If (String.Equals(Me._LockPurpose, value) = false) Then
					Me.OnLockPurposeChanging(value)
					Me.SendPropertyChanging
					Me._LockPurpose = value
					Me.SendPropertyChanged("LockPurpose")
					Me.OnLockPurposeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUser")>  _
	Partial Public Class WebUser
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserID As Integer
		
		Private _Code As String
		
		Private _ScanCode As String
		
		Private _Email As String
		
		Private _EmailPassword As String
		
		Private _RegistrationCode As String
		
		Private _SsoCode As String
		
		Private _RowGuid As System.Guid
		
		Private _DefaultEmail As String
		
		Private _DefaultEmailPassword As String
		
		Private _DefaultRegistrationCode As String
		
		Private _LastLogin As System.Nullable(Of Date)
		
		Private _SsoEmail As String
		
		Private _IsTranslator As Boolean
		
		Private _WebUserProfiles As EntitySet(Of WebUserProfile)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnScanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnScanCodeChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnEmailPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnEmailPasswordChanged()
    End Sub
    Partial Private Sub OnRegistrationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRegistrationCodeChanged()
    End Sub
    Partial Private Sub OnSsoCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSsoCodeChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    Partial Private Sub OnDefaultEmailChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultEmailChanged()
    End Sub
    Partial Private Sub OnDefaultEmailPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultEmailPasswordChanged()
    End Sub
    Partial Private Sub OnDefaultRegistrationCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDefaultRegistrationCodeChanged()
    End Sub
    Partial Private Sub OnLastLoginChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLoginChanged()
    End Sub
    Partial Private Sub OnSsoEmailChanging(value As String)
    End Sub
    Partial Private Sub OnSsoEmailChanged()
    End Sub
    Partial Private Sub OnIsTranslatorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsTranslatorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._WebUserProfiles = New EntitySet(Of WebUserProfile)(AddressOf Me.attach_WebUserProfiles, AddressOf Me.detach_WebUserProfiles)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WebUserID() As Integer
			Get
				Return Me._WebUserID
			End Get
			Set
				If ((Me._WebUserID = value)  _
							= false) Then
					Me.OnWebUserIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserID = value
					Me.SendPropertyChanged("WebUserID")
					Me.OnWebUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScanCode", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property ScanCode() As String
			Get
				Return Me._ScanCode
			End Get
			Set
				If (String.Equals(Me._ScanCode, value) = false) Then
					Me.OnScanCodeChanging(value)
					Me.SendPropertyChanging
					Me._ScanCode = value
					Me.SendPropertyChanged("ScanCode")
					Me.OnScanCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailPassword", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
		Public Property EmailPassword() As String
			Get
				Return Me._EmailPassword
			End Get
			Set
				If (String.Equals(Me._EmailPassword, value) = false) Then
					Me.OnEmailPasswordChanging(value)
					Me.SendPropertyChanging
					Me._EmailPassword = value
					Me.SendPropertyChanged("EmailPassword")
					Me.OnEmailPasswordChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegistrationCode", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property RegistrationCode() As String
			Get
				Return Me._RegistrationCode
			End Get
			Set
				If (String.Equals(Me._RegistrationCode, value) = false) Then
					Me.OnRegistrationCodeChanging(value)
					Me.SendPropertyChanging
					Me._RegistrationCode = value
					Me.SendPropertyChanged("RegistrationCode")
					Me.OnRegistrationCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SsoCode", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
		Public Property SsoCode() As String
			Get
				Return Me._SsoCode
			End Get
			Set
				If (String.Equals(Me._SsoCode, value) = false) Then
					Me.OnSsoCodeChanging(value)
					Me.SendPropertyChanging
					Me._SsoCode = value
					Me.SendPropertyChanged("SsoCode")
					Me.OnSsoCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultEmail", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
		Public Property DefaultEmail() As String
			Get
				Return Me._DefaultEmail
			End Get
			Set
				If (String.Equals(Me._DefaultEmail, value) = false) Then
					Me.OnDefaultEmailChanging(value)
					Me.SendPropertyChanging
					Me._DefaultEmail = value
					Me.SendPropertyChanged("DefaultEmail")
					Me.OnDefaultEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultEmailPassword", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
		Public Property DefaultEmailPassword() As String
			Get
				Return Me._DefaultEmailPassword
			End Get
			Set
				If (String.Equals(Me._DefaultEmailPassword, value) = false) Then
					Me.OnDefaultEmailPasswordChanging(value)
					Me.SendPropertyChanging
					Me._DefaultEmailPassword = value
					Me.SendPropertyChanged("DefaultEmailPassword")
					Me.OnDefaultEmailPasswordChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultRegistrationCode", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
		Public Property DefaultRegistrationCode() As String
			Get
				Return Me._DefaultRegistrationCode
			End Get
			Set
				If (String.Equals(Me._DefaultRegistrationCode, value) = false) Then
					Me.OnDefaultRegistrationCodeChanging(value)
					Me.SendPropertyChanging
					Me._DefaultRegistrationCode = value
					Me.SendPropertyChanged("DefaultRegistrationCode")
					Me.OnDefaultRegistrationCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLogin", DbType:="DateTime")>  _
		Public Property LastLogin() As System.Nullable(Of Date)
			Get
				Return Me._LastLogin
			End Get
			Set
				If (Me._LastLogin.Equals(value) = false) Then
					Me.OnLastLoginChanging(value)
					Me.SendPropertyChanging
					Me._LastLogin = value
					Me.SendPropertyChanged("LastLogin")
					Me.OnLastLoginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SsoEmail", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
		Public Property SsoEmail() As String
			Get
				Return Me._SsoEmail
			End Get
			Set
				If (String.Equals(Me._SsoEmail, value) = false) Then
					Me.OnSsoEmailChanging(value)
					Me.SendPropertyChanging
					Me._SsoEmail = value
					Me.SendPropertyChanged("SsoEmail")
					Me.OnSsoEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsTranslator", DbType:="Bit NOT NULL")>  _
		Public Property IsTranslator() As Boolean
			Get
				Return Me._IsTranslator
			End Get
			Set
				If ((Me._IsTranslator = value)  _
							= false) Then
					Me.OnIsTranslatorChanging(value)
					Me.SendPropertyChanging
					Me._IsTranslator = value
					Me.SendPropertyChanged("IsTranslator")
					Me.OnIsTranslatorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebUser_WebUserProfile", Storage:="_WebUserProfiles", ThisKey:="WebUserID", OtherKey:="WebUserID")>  _
		Public Property WebUserProfiles() As EntitySet(Of WebUserProfile)
			Get
				Return Me._WebUserProfiles
			End Get
			Set
				Me._WebUserProfiles.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_WebUserProfiles(ByVal entity As WebUserProfile)
			Me.SendPropertyChanging
			entity.WebUser = Me
		End Sub
		
		Private Sub detach_WebUserProfiles(ByVal entity As WebUserProfile)
			Me.SendPropertyChanging
			entity.WebUser = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUserProfile")>  _
	Partial Public Class WebUserProfile
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserProfileID As Integer
		
		Private _WebUserID As Integer
		
		Private _ProfileCode As String
		
		Private _ProfileDescription As String
		
		Private _RowGuid As System.Guid
		
		Private _LastLogin As System.Nullable(Of Date)
		
		Private _AllowPortal As Boolean
		
		Private _WebUserProfileTypeID As Integer
		
		Private _WebUserProfileFinancialAccounts As EntitySet(Of WebUserProfileFinancialAccount)
		
		Private _WebUser As EntityRef(Of WebUser)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserProfileIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserProfileIDChanged()
    End Sub
    Partial Private Sub OnWebUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserIDChanged()
    End Sub
    Partial Private Sub OnProfileCodeChanging(value As String)
    End Sub
    Partial Private Sub OnProfileCodeChanged()
    End Sub
    Partial Private Sub OnProfileDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnProfileDescriptionChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    Partial Private Sub OnLastLoginChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLoginChanged()
    End Sub
    Partial Private Sub OnAllowPortalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAllowPortalChanged()
    End Sub
    Partial Private Sub OnWebUserProfileTypeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserProfileTypeIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._WebUserProfileFinancialAccounts = New EntitySet(Of WebUserProfileFinancialAccount)(AddressOf Me.attach_WebUserProfileFinancialAccounts, AddressOf Me.detach_WebUserProfileFinancialAccounts)
			Me._WebUser = CType(Nothing, EntityRef(Of WebUser))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserProfileID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WebUserProfileID() As Integer
			Get
				Return Me._WebUserProfileID
			End Get
			Set
				If ((Me._WebUserProfileID = value)  _
							= false) Then
					Me.OnWebUserProfileIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserProfileID = value
					Me.SendPropertyChanged("WebUserProfileID")
					Me.OnWebUserProfileIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserID", DbType:="Int NOT NULL")>  _
		Public Property WebUserID() As Integer
			Get
				Return Me._WebUserID
			End Get
			Set
				If ((Me._WebUserID = value)  _
							= false) Then
					If Me._WebUser.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWebUserIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserID = value
					Me.SendPropertyChanged("WebUserID")
					Me.OnWebUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileCode", DbType:="NVarChar(18) NOT NULL", CanBeNull:=false)>  _
		Public Property ProfileCode() As String
			Get
				Return Me._ProfileCode
			End Get
			Set
				If (String.Equals(Me._ProfileCode, value) = false) Then
					Me.OnProfileCodeChanging(value)
					Me.SendPropertyChanging
					Me._ProfileCode = value
					Me.SendPropertyChanged("ProfileCode")
					Me.OnProfileCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfileDescription", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property ProfileDescription() As String
			Get
				Return Me._ProfileDescription
			End Get
			Set
				If (String.Equals(Me._ProfileDescription, value) = false) Then
					Me.OnProfileDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._ProfileDescription = value
					Me.SendPropertyChanged("ProfileDescription")
					Me.OnProfileDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLogin", DbType:="DateTime")>  _
		Public Property LastLogin() As System.Nullable(Of Date)
			Get
				Return Me._LastLogin
			End Get
			Set
				If (Me._LastLogin.Equals(value) = false) Then
					Me.OnLastLoginChanging(value)
					Me.SendPropertyChanging
					Me._LastLogin = value
					Me.SendPropertyChanged("LastLogin")
					Me.OnLastLoginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllowPortal", DbType:="Bit NOT NULL")>  _
		Public Property AllowPortal() As Boolean
			Get
				Return Me._AllowPortal
			End Get
			Set
				If ((Me._AllowPortal = value)  _
							= false) Then
					Me.OnAllowPortalChanging(value)
					Me.SendPropertyChanging
					Me._AllowPortal = value
					Me.SendPropertyChanged("AllowPortal")
					Me.OnAllowPortalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserProfileTypeID", DbType:="Int NOT NULL")>  _
		Public Property WebUserProfileTypeID() As Integer
			Get
				Return Me._WebUserProfileTypeID
			End Get
			Set
				If ((Me._WebUserProfileTypeID = value)  _
							= false) Then
					Me.OnWebUserProfileTypeIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserProfileTypeID = value
					Me.SendPropertyChanged("WebUserProfileTypeID")
					Me.OnWebUserProfileTypeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebUserProfile_WebUserProfileFinancialAccount", Storage:="_WebUserProfileFinancialAccounts", ThisKey:="WebUserProfileID,WebUserProfileTypeID", OtherKey:="WebUserProfileID,WebUserProfileTypeID")>  _
		Public Property WebUserProfileFinancialAccounts() As EntitySet(Of WebUserProfileFinancialAccount)
			Get
				Return Me._WebUserProfileFinancialAccounts
			End Get
			Set
				Me._WebUserProfileFinancialAccounts.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebUser_WebUserProfile", Storage:="_WebUser", ThisKey:="WebUserID", OtherKey:="WebUserID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property WebUser() As WebUser
			Get
				Return Me._WebUser.Entity
			End Get
			Set
				Dim previousValue As WebUser = Me._WebUser.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WebUser.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WebUser.Entity = Nothing
						previousValue.WebUserProfiles.Remove(Me)
					End If
					Me._WebUser.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.WebUserProfiles.Add(Me)
						Me._WebUserID = value.WebUserID
					Else
						Me._WebUserID = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("WebUser")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_WebUserProfileFinancialAccounts(ByVal entity As WebUserProfileFinancialAccount)
			Me.SendPropertyChanging
			entity.WebUserProfile = Me
		End Sub
		
		Private Sub detach_WebUserProfileFinancialAccounts(ByVal entity As WebUserProfileFinancialAccount)
			Me.SendPropertyChanging
			entity.WebUserProfile = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUserProfileFinancialAccount")>  _
	Partial Public Class WebUserProfileFinancialAccount
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _WebUserProfileFinancialAccountID As Integer
		
		Private _ScanCode As String
		
		Private _WebUserProfileID As Integer
		
		Private _FinancialAccountID As Integer
		
		Private _RowGuid As System.Guid
		
		Private _WebUserProfileTypeID As Integer
		
		Private _WebUserProfile As EntityRef(Of WebUserProfile)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWebUserProfileFinancialAccountIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserProfileFinancialAccountIDChanged()
    End Sub
    Partial Private Sub OnScanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnScanCodeChanged()
    End Sub
    Partial Private Sub OnWebUserProfileIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserProfileIDChanged()
    End Sub
    Partial Private Sub OnFinancialAccountIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFinancialAccountIDChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    Partial Private Sub OnWebUserProfileTypeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnWebUserProfileTypeIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._WebUserProfile = CType(Nothing, EntityRef(Of WebUserProfile))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserProfileFinancialAccountID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property WebUserProfileFinancialAccountID() As Integer
			Get
				Return Me._WebUserProfileFinancialAccountID
			End Get
			Set
				If ((Me._WebUserProfileFinancialAccountID = value)  _
							= false) Then
					Me.OnWebUserProfileFinancialAccountIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserProfileFinancialAccountID = value
					Me.SendPropertyChanged("WebUserProfileFinancialAccountID")
					Me.OnWebUserProfileFinancialAccountIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScanCode", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property ScanCode() As String
			Get
				Return Me._ScanCode
			End Get
			Set
				If (String.Equals(Me._ScanCode, value) = false) Then
					Me.OnScanCodeChanging(value)
					Me.SendPropertyChanging
					Me._ScanCode = value
					Me.SendPropertyChanged("ScanCode")
					Me.OnScanCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserProfileID", DbType:="Int NOT NULL")>  _
		Public Property WebUserProfileID() As Integer
			Get
				Return Me._WebUserProfileID
			End Get
			Set
				If ((Me._WebUserProfileID = value)  _
							= false) Then
					If Me._WebUserProfile.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWebUserProfileIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserProfileID = value
					Me.SendPropertyChanged("WebUserProfileID")
					Me.OnWebUserProfileIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FinancialAccountID", DbType:="Int NOT NULL")>  _
		Public Property FinancialAccountID() As Integer
			Get
				Return Me._FinancialAccountID
			End Get
			Set
				If ((Me._FinancialAccountID = value)  _
							= false) Then
					Me.OnFinancialAccountIDChanging(value)
					Me.SendPropertyChanging
					Me._FinancialAccountID = value
					Me.SendPropertyChanged("FinancialAccountID")
					Me.OnFinancialAccountIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebUserProfileTypeID", DbType:="Int NOT NULL")>  _
		Public Property WebUserProfileTypeID() As Integer
			Get
				Return Me._WebUserProfileTypeID
			End Get
			Set
				If ((Me._WebUserProfileTypeID = value)  _
							= false) Then
					If Me._WebUserProfile.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnWebUserProfileTypeIDChanging(value)
					Me.SendPropertyChanging
					Me._WebUserProfileTypeID = value
					Me.SendPropertyChanged("WebUserProfileTypeID")
					Me.OnWebUserProfileTypeIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebUserProfile_WebUserProfileFinancialAccount", Storage:="_WebUserProfile", ThisKey:="WebUserProfileID,WebUserProfileTypeID", OtherKey:="WebUserProfileID,WebUserProfileTypeID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property WebUserProfile() As WebUserProfile
			Get
				Return Me._WebUserProfile.Entity
			End Get
			Set
				Dim previousValue As WebUserProfile = Me._WebUserProfile.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._WebUserProfile.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._WebUserProfile.Entity = Nothing
						previousValue.WebUserProfileFinancialAccounts.Remove(Me)
					End If
					Me._WebUserProfile.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.WebUserProfileFinancialAccounts.Add(Me)
						Me._WebUserProfileID = value.WebUserProfileID
						Me._WebUserProfileTypeID = value.WebUserProfileTypeID
					Else
						Me._WebUserProfileID = CType(Nothing, Integer)
						Me._WebUserProfileTypeID = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("WebUserProfile")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Property")>  _
	Partial Public Class [Property]
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PropertyID As Integer
		
		Private _PropName As String
		
		Private _PropValue As String
		
		Private _LastEdit As Date
		
		Private _RowGuid As System.Guid
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPropertyIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPropertyIDChanged()
    End Sub
    Partial Private Sub OnPropNameChanging(value As String)
    End Sub
    Partial Private Sub OnPropNameChanged()
    End Sub
    Partial Private Sub OnPropValueChanging(value As String)
    End Sub
    Partial Private Sub OnPropValueChanged()
    End Sub
    Partial Private Sub OnLastEditChanging(value As Date)
    End Sub
    Partial Private Sub OnLastEditChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PropertyID() As Integer
			Get
				Return Me._PropertyID
			End Get
			Set
				If ((Me._PropertyID = value)  _
							= false) Then
					Me.OnPropertyIDChanging(value)
					Me.SendPropertyChanging
					Me._PropertyID = value
					Me.SendPropertyChanged("PropertyID")
					Me.OnPropertyIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property PropName() As String
			Get
				Return Me._PropName
			End Get
			Set
				If (String.Equals(Me._PropName, value) = false) Then
					Me.OnPropNameChanging(value)
					Me.SendPropertyChanging
					Me._PropName = value
					Me.SendPropertyChanged("PropName")
					Me.OnPropNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropValue", DbType:="NVarChar(4000) NOT NULL", CanBeNull:=false)>  _
		Public Property PropValue() As String
			Get
				Return Me._PropValue
			End Get
			Set
				If (String.Equals(Me._PropValue, value) = false) Then
					Me.OnPropValueChanging(value)
					Me.SendPropertyChanging
					Me._PropValue = value
					Me.SendPropertyChanged("PropValue")
					Me.OnPropValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastEdit", DbType:="DateTime NOT NULL")>  _
		Public Property LastEdit() As Date
			Get
				Return Me._LastEdit
			End Get
			Set
				If ((Me._LastEdit = value)  _
							= false) Then
					Me.OnLastEditChanging(value)
					Me.SendPropertyChanging
					Me._LastEdit = value
					Me.SendPropertyChanged("LastEdit")
					Me.OnLastEditChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Desig")>  _
	Partial Public Class Desig
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DesigID As Integer
		
		Private _Code As String
		
		Private _ScanCode As String
		
		Private _Description As String
		
		Private _RowGuid As System.Guid
		
		Private _Category As String
		
		Private _Portal_Description As String
		
		Private _Portal_ImageURL As String
		
		Private _Portal_SiteURL As String
		
		Private _Portal_GiveToURL As String
		
		Private _Portal_RssURL As String
		
		Private _Portal_SecurityLevel As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDesigIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnDesigIDChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnScanCodeChanging(value As String)
    End Sub
    Partial Private Sub OnScanCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnRowGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnRowGuidChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnPortal_DescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnPortal_DescriptionChanged()
    End Sub
    Partial Private Sub OnPortal_ImageURLChanging(value As String)
    End Sub
    Partial Private Sub OnPortal_ImageURLChanged()
    End Sub
    Partial Private Sub OnPortal_SiteURLChanging(value As String)
    End Sub
    Partial Private Sub OnPortal_SiteURLChanged()
    End Sub
    Partial Private Sub OnPortal_GiveToURLChanging(value As String)
    End Sub
    Partial Private Sub OnPortal_GiveToURLChanged()
    End Sub
    Partial Private Sub OnPortal_RssURLChanging(value As String)
    End Sub
    Partial Private Sub OnPortal_RssURLChanged()
    End Sub
    Partial Private Sub OnPortal_SecurityLevelChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortal_SecurityLevelChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesigID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property DesigID() As Integer
			Get
				Return Me._DesigID
			End Get
			Set
				If ((Me._DesigID = value)  _
							= false) Then
					Me.OnDesigIDChanging(value)
					Me.SendPropertyChanging
					Me._DesigID = value
					Me.SendPropertyChanged("DesigID")
					Me.OnDesigIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(18) NOT NULL", CanBeNull:=false)>  _
		Public Property Code() As String
			Get
				Return Me._Code
			End Get
			Set
				If (String.Equals(Me._Code, value) = false) Then
					Me.OnCodeChanging(value)
					Me.SendPropertyChanging
					Me._Code = value
					Me.SendPropertyChanged("Code")
					Me.OnCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ScanCode", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
		Public Property ScanCode() As String
			Get
				Return Me._ScanCode
			End Get
			Set
				If (String.Equals(Me._ScanCode, value) = false) Then
					Me.OnScanCodeChanging(value)
					Me.SendPropertyChanging
					Me._ScanCode = value
					Me.SendPropertyChanged("ScanCode")
					Me.OnScanCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RowGuid", DbType:="UniqueIdentifier NOT NULL")>  _
		Public Property RowGuid() As System.Guid
			Get
				Return Me._RowGuid
			End Get
			Set
				If ((Me._RowGuid = value)  _
							= false) Then
					Me.OnRowGuidChanging(value)
					Me.SendPropertyChanging
					Me._RowGuid = value
					Me.SendPropertyChanged("RowGuid")
					Me.OnRowGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Category() As String
			Get
				Return Me._Category
			End Get
			Set
				If (String.Equals(Me._Category, value) = false) Then
					Me.OnCategoryChanging(value)
					Me.SendPropertyChanging
					Me._Category = value
					Me.SendPropertyChanged("Category")
					Me.OnCategoryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_Description", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Portal_Description() As String
			Get
				Return Me._Portal_Description
			End Get
			Set
				If (String.Equals(Me._Portal_Description, value) = false) Then
					Me.OnPortal_DescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Portal_Description = value
					Me.SendPropertyChanged("Portal_Description")
					Me.OnPortal_DescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_ImageURL", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Portal_ImageURL() As String
			Get
				Return Me._Portal_ImageURL
			End Get
			Set
				If (String.Equals(Me._Portal_ImageURL, value) = false) Then
					Me.OnPortal_ImageURLChanging(value)
					Me.SendPropertyChanging
					Me._Portal_ImageURL = value
					Me.SendPropertyChanged("Portal_ImageURL")
					Me.OnPortal_ImageURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_SiteURL", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Portal_SiteURL() As String
			Get
				Return Me._Portal_SiteURL
			End Get
			Set
				If (String.Equals(Me._Portal_SiteURL, value) = false) Then
					Me.OnPortal_SiteURLChanging(value)
					Me.SendPropertyChanging
					Me._Portal_SiteURL = value
					Me.SendPropertyChanged("Portal_SiteURL")
					Me.OnPortal_SiteURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_GiveToURL", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Portal_GiveToURL() As String
			Get
				Return Me._Portal_GiveToURL
			End Get
			Set
				If (String.Equals(Me._Portal_GiveToURL, value) = false) Then
					Me.OnPortal_GiveToURLChanging(value)
					Me.SendPropertyChanging
					Me._Portal_GiveToURL = value
					Me.SendPropertyChanged("Portal_GiveToURL")
					Me.OnPortal_GiveToURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_RssURL", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property Portal_RssURL() As String
			Get
				Return Me._Portal_RssURL
			End Get
			Set
				If (String.Equals(Me._Portal_RssURL, value) = false) Then
					Me.OnPortal_RssURLChanging(value)
					Me.SendPropertyChanging
					Me._Portal_RssURL = value
					Me.SendPropertyChanged("Portal_RssURL")
					Me.OnPortal_RssURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portal_SecurityLevel", DbType:="Int NOT NULL")>  _
		Public Property Portal_SecurityLevel() As Integer
			Get
				Return Me._Portal_SecurityLevel
			End Get
			Set
				If ((Me._Portal_SecurityLevel = value)  _
							= false) Then
					Me.OnPortal_SecurityLevelChanging(value)
					Me.SendPropertyChanging
					Me._Portal_SecurityLevel = value
					Me.SendPropertyChanged("Portal_SecurityLevel")
					Me.OnPortal_SecurityLevelChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
